<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-07-02T22:12:30+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Grow Gardenia</title><subtitle>성장중🌱</subtitle><author><name>Gardenia</name></author><entry><title type="html">[Inflearn]비전공자를 위한 개발자 취업 올인원 가이드</title><link href="http://localhost:4000/job/%EB%B9%84%EC%A0%84%EA%B3%B5%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%B7%A8%EC%97%85-%EC%98%AC%EC%9D%B8%EC%9B%90-%EA%B0%80%EC%9D%B4%EB%93%9C/" rel="alternate" type="text/html" title="[Inflearn]비전공자를 위한 개발자 취업 올인원 가이드" /><published>2022-07-01T00:00:00+09:00</published><updated>2022-07-01T00:00:00+09:00</updated><id>http://localhost:4000/job/%EB%B9%84%EC%A0%84%EA%B3%B5%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%B7%A8%EC%97%85-%EC%98%AC%EC%9D%B8%EC%9B%90-%EA%B0%80%EC%9D%B4%EB%93%9C</id><content type="html" xml:base="http://localhost:4000/job/%EB%B9%84%EC%A0%84%EA%B3%B5%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%B7%A8%EC%97%85-%EC%98%AC%EC%9D%B8%EC%9B%90-%EA%B0%80%EC%9D%B4%EB%93%9C/"><![CDATA[<h1 id="읽어-볼-만한-링크-정리">읽어 볼 만한 링크 정리</h1>

<p><a href="https://jbee.io/essay/for_junior_frontend_developer/">신입 프론트엔드 개발자가 되려면 무엇을 학습해야 하나요?</a><br />
<a href="https://youtu.be/IXtfqhBIQos">캡틴판교-프론트엔드 개발 학습 방법-유투브</a></p>]]></content><author><name>Gardenia</name></author><category term="Job" /><category term="Inflearn" /><category term="Job" /><summary type="html"><![CDATA[인프런 강의 정리, 비전공자를 위한 학습, 취업 준비정리, 웹 프론트엔드 관련만 따로 정리]]></summary></entry><entry><title type="html">[CodeStates]Coplit-6-객체</title><link href="http://localhost:4000/coplit/6-%EA%B0%9D%EC%B2%B4/" rel="alternate" type="text/html" title="[CodeStates]Coplit-6-객체" /><published>2022-06-29T00:00:00+09:00</published><updated>2022-06-29T00:00:00+09:00</updated><id>http://localhost:4000/coplit/6-%EA%B0%9D%EC%B2%B4</id><content type="html" xml:base="http://localhost:4000/coplit/6-%EA%B0%9D%EC%B2%B4/"><![CDATA[<h1 id="01_getproperty">01_getProperty</h1>

<ul>
  <li>객체와 키를 입력받아 키에 해당하는 값을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getProperty(obj, property) {
  return obj[property]
}

</code></pre></div></div>

<h1 id="02_addproperty">02_addProperty</h1>

<ul>
  <li>객체와 키를 입력받아 키에 해당하는 값을 true로 설정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addProperty(obj, property) {
  obj[property] = true;
}
</code></pre></div></div>

<h1 id="03_addpropertyandvalue">03_addPropertyAndValue</h1>

<ul>
  <li>객체와 키, 값을 입력받아 키에 값을 할당</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addPropertyAndValue(obj, property, value) {
  obj[property] = value;
}
</code></pre></div></div>

<h1 id="04_addobjectproperty">04_addObjectProperty</h1>

<ul>
  <li>두 개의 객체와 키를 입력받아 첫번째 객체의 키에 두번째 객체를 할당</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addObjectProperty(obj1, property, obj2) {
  obj1[property] = obj2;
}

</code></pre></div></div>

<h1 id="05_removeproperty">05_removeProperty</h1>

<ul>
  <li>객체와 키를 입력받아 키가 가리키는 속성(property)을 제거</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeProperty(obj, property) {
  delete obj[property];
}
</code></pre></div></div>

<h1 id="06_removenumbervalues">06_removeNumberValues</h1>

<ul>
  <li>객체를 입력받아 <code class="language-plaintext highlighter-rouge">number</code> 타입의 값을 갖는 속성을 모두 제거</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeNumberValues(obj) {
  for(let i in obj){
    if(typeof obj[i] === 'number' ){
      delete obj[i]
    }
  }
}

</code></pre></div></div>

<h1 id="07_removearrayvalues">07_removeArrayValues</h1>

<ul>
  <li>객체를 입력받아 배열을 값으로 갖는 속성을 모두 제거</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeArrayValues(obj) {
  for(let i in obj){
    if(Array.isArray(obj[i])){
      delete obj[i];
    }
  }
}

</code></pre></div></div>

<h1 id="08_removeoddvalues">08_removeOddValues</h1>

<ul>
  <li>객체를 입력받아 홀수를 값으로 갖는 속성을 모두 제거</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeOddValues(obj) {
  for(let i in obj){
    if(obj[i]%2===1 &amp;&amp; typeof obj[i] === 'number'){
      delete obj[i]
    }
  }
}

</code></pre></div></div>

<h1 id="09_ispersonoldenoughtovote">09_isPersonOldEnoughToVote</h1>

<ul>
  <li>객체를 입력받아 객체가 가진 <code class="language-plaintext highlighter-rouge">age</code> 속성값이 합법적으로 투표할 수 있는 나이(18세 이상)인지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isPersonOldEnoughToVote(person) {
  if(person.age &gt;= 18){
    return true;
  } else {
    return false;
  }
}

</code></pre></div></div>

<h1 id="10_addfullnameproperty">10_addFullNameProperty</h1>

<ul>
  <li>객체를 입력받아 <code class="language-plaintext highlighter-rouge">'firstName'</code>, <code class="language-plaintext highlighter-rouge">'lastName'</code> 속성값 사이에 띄어쓰기 하나를 둔 단일 문자열을 <code class="language-plaintext highlighter-rouge">fullName</code> 속성값으로 할</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addFullNameProperty(obj) {
  obj.fullName = `${obj.firstName} ${obj.lastName}`
}

</code></pre></div></div>

<h1 id="11_removenumberslargerthan">11_removeNumbersLargerThan</h1>

<ul>
  <li>수와 객체를 입력받아 입력받은 수보다 큰 수를 갖는 속성을 모두 제거</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeNumbersLargerThan(num, obj) {
  for(let i in obj){
    if(obj[i] &gt; num &amp;&amp; typeof obj[i] === 'number'){
      delete obj[i];
    }
  }
}

</code></pre></div></div>

<h1 id="12_countnumberofkeys">12_countNumberOfKeys</h1>

<ul>
  <li>객체를 입력받아 속성의 개수를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function countNumberOfKeys(obj) {
  return Object.keys(obj).length;
}

</code></pre></div></div>

<h1 id="13_printobject">13_printObject</h1>

<ul>
  <li>객체를 입력받아 키, 값 쌍을 표현하는 문자열을 리턴
    <ul>
      <li>각 문자열은 한 줄에 <code class="language-plaintext highlighter-rouge">키: 값</code> 형태로 구성되며, 각 문자열 끝에는 줄바꿈 문자가 포함되야 함</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function printObject(obj) {
  let result ='';

  for(let i in obj){
    result = result +i +': '+obj[i] + '\n'
  }
  return result;
}

</code></pre></div></div>

<h1 id="14_getelementofarrayproperty">14_getElementOfArrayProperty</h1>

<ul>
  <li>객체, 키, 수를 입력받아 주어진 키에 해당하는 값이 배열인 경우, 수가 가리키는 인덱스에 해당하는 요소를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getElementOfArrayProperty(obj, key, index) {
  let arrProperty = obj[key];
  if(Array.isArray(arrProperty) === false){
    return undefined
  }

  return arrProperty[index]
}

</code></pre></div></div>

<h1 id="15_select">15_select</h1>

<ul>
  <li>배열과 객체를 입력받아 배열의 각 요소들을 객체의 키로 했을 때 그 값을 추출하여 만든 새로운 객체를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function select(arr, obj) {
  let newObj = {};

  for(let i in obj){
    for(let j = 0; j &lt; arr.length; j++){
      if(i === arr[j]){
        newObj[i] = obj[i];
      }
    }
  }
return newObj;
}
</code></pre></div></div>

<h1 id="16_getlastelementofproperty">16_getLastElementOfProperty</h1>

<ul>
  <li>객체와 키를 입력받아 키에 해당하는 값이 배열인 경우, 마지막 요소를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getLastElementOfProperty(obj, property) {
  let result = obj[property];
  if(!Array.isArray(result) || result.length === 0 ){
    return undefined;
  }

  return result[result.length-1]
}

</code></pre></div></div>

<h1 id="17_getvalueofnthelement">17_getValueOfNthElement</h1>

<ul>
  <li>배열과 수를 입력받아 수가 가리키는 인덱스에 해당하는 객체의 <code class="language-plaintext highlighter-rouge">'name'</code> 속성값을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getValueOfNthElement(arr, num) {
  if(arr.length === 0){
    return 'no name';
  } else if(arr.length-1 &lt; num){
    return arr[arr.length-1]['name'];
  } else {
    return arr[num]['name']
  }
}

</code></pre></div></div>

<h1 id="18_getallbutlastelementofproperty">18_getAllButLastElementOfProperty</h1>

<ul>
  <li>객체와 키를 입력받아 키에 해당하는 값이 배열인 경우, 마지막 요소가 제거된 새로운 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getAllButLastElementOfProperty(obj, key) {
  let newObj = obj[key];
  if(!Array.isArray(newObj) || newObj.length === 0 ){
    return [];
  }

  return newObj.slice(0,-1);
}

</code></pre></div></div>

<h1 id="19_extend">19_extend</h1>

<ul>
  <li>두 개의 객체를 입력받아 두번째 객체의 속성들을 첫번째 객체에 추가</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function extend(obj1, obj2) {
  for(let i in obj2){
    if(!(i in obj1)){
      obj1[i] = obj2[i]
    }
  }
}

</code></pre></div></div>

<h1 id="20_countallcharacters">20_countAllCharacters</h1>

<ul>
  <li>문자열을 입력받아 문자열을 구성하는 각 문자(letter)를 키로 갖는 객체를 리턴
    <ul>
      <li>각 키의 값은 해당 문자가 문자열에서 등장하는 횟수를 의미하는 <code class="language-plaintext highlighter-rouge">number</code> 타입의 값</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function countAllCharacters(str) {
  let obj = {};
  for (let i = 0; i &lt; str.length; i++) {
    if (obj[str[i]] === undefined) {
      obj[str[i]] = 0;
    }
    obj[str[i]]++;
  }
  return obj;
}

</code></pre></div></div>

<h1 id="21_mostfrequentcharacter">21_mostFrequentCharacter</h1>

<ul>
  <li>문자열을 입력받아 가장 많이 반복되는 문자(letter)를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function mostFrequentCharacter(str) {
  let obj = { mostCount: 0, mostFrequent: '' };
  for (let i = 0; i &lt; str.length; i++) {
    if (str[i] === ' ') {
      continue;
    }

    if (obj[str[i]] === undefined) {
      obj[str[i]] = 0;
    }
    obj[str[i]] += 1;

    if (obj[str[i]] &gt; obj['mostCount']) {
      obj['mostCount'] = obj[str[i]];
      obj['mostFrequent'] = str[i];
    }
  }
  return obj['mostFrequent'];
}
</code></pre></div></div>]]></content><author><name>Gardenia</name></author><category term="Coplit" /><category term="CodeStates" /><category term="Coplit" /><category term="JS" /><summary type="html"><![CDATA[코플릿 복습하기 - 객체 21문제]]></summary></entry><entry><title type="html">[CodeStates]Coplit-4-반복문</title><link href="http://localhost:4000/coplit/4-%EB%B0%98%EB%B3%B5%EB%AC%B8/" rel="alternate" type="text/html" title="[CodeStates]Coplit-4-반복문" /><published>2022-06-28T00:00:00+09:00</published><updated>2022-06-28T00:00:00+09:00</updated><id>http://localhost:4000/coplit/4-%EB%B0%98%EB%B3%B5%EB%AC%B8</id><content type="html" xml:base="http://localhost:4000/coplit/4-%EB%B0%98%EB%B3%B5%EB%AC%B8/"><![CDATA[<h1 id="01_findthebug">01_findTheBug</h1>

<ul>
  <li>문자열을 입력받아 버그(‘#’)의 인덱스를 리턴
    <ul>
      <li>’#’ 기호가 없는 경우 <code class="language-plaintext highlighter-rouge">undefined</code>를 리턴</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function findTheBug(word) {
  for(let i =0 ; word.length&gt;i; i++){
    if(word[i]==='#'){
      return i;
    }
  }
  return undefined;
}
</code></pre></div></div>

<h1 id="02_sumto">02_sumTo</h1>

<ul>
  <li>수를 입력받아 0부터 해당 수까지의 합을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function sumTo(num) {
  let result =0;
  for(let i =0; num&gt;=i; i++){
    result = result + i;
  } return result;
}
</code></pre></div></div>

<h1 id="03_isodd">03_isOdd</h1>

<ul>
  <li>수를 입력받아 홀수인지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isOdd(num) {
  if(num &lt; 0){
    num = -num;
  }
  while(num &gt;= 0){
    if(num === 0){
      return false;
    } else if(num === 1){
      return true;
    }
     num = num-2;
  }
}
</code></pre></div></div>

<h1 id="04_factorial">04_factorial</h1>

<ul>
  <li>수를 입력받아 n-factorial(n!) 값을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function factorial(num) {
  let result = 1;
  if(num === 0){
    return 1;
  }

  for (let i =1; num &gt;= i; i++){
    result = result * i;
  }
  return result;
}

</code></pre></div></div>

<h1 id="05_repeatstring">05_repeatString</h1>

<ul>
  <li>문자열과 수를 입력받아 반복된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function repeatString(str, num) {
  let result= '';

  if(num === 0){
    result = '';
  }

  for(let i = 0; num &gt; i; i++){
    result = result + str;
  }
  return result;
}
</code></pre></div></div>

<h1 id="06_makedigits">06_makeDigits</h1>

<ul>
  <li>수(<code class="language-plaintext highlighter-rouge">num</code>)를 입력받아 1부터 <code class="language-plaintext highlighter-rouge">num</code>까지의 정수로 구성된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makeDigits(num) {
  let result = '';

  for(let i = 1; num&gt;= i; i++){
    result = result + String(i);
  }
  return result;
}
</code></pre></div></div>

<h1 id="07_makedigits2">07_makeDigits2</h1>

<ul>
  <li>수(<code class="language-plaintext highlighter-rouge">num</code>)를 입력받아 1부터 <code class="language-plaintext highlighter-rouge">num</code>까지의 정수로 구성된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makeDigits2(num) {
  let result = '1';
  let i =2;

 while(i&lt;=num){
   result = result+`-${i}`
   i++
 }
 return result;
}

</code></pre></div></div>

<h1 id="08_makeodddigits">08_makeOddDigits</h1>

<ul>
  <li>수(<code class="language-plaintext highlighter-rouge">num</code>)를 입력받아 1을 포함하여 <code class="language-plaintext highlighter-rouge">num</code>개의 홀수로 구성된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makeOddDigits(num) {
  let result = '';

  let count = 0;
  let i = 1;
  while (count &lt; num) {
    result = result + String(i);
    i = i + 2;
    count++;
  }

  return result;
}
</code></pre></div></div>

<h1 id="09_makemultiplesofdigit">09_makeMultiplesOfDigit</h1>

<ul>
  <li>수를 입력받아 1부터 해당 수까지의 수 중에서 3의 배수로만 구성된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makeMultiplesOfDigit(num) {
  let result= '';

  for(let i = 3; i &lt;= num; i+=3 ){
    result = result + i;
  }
  return result;
}
</code></pre></div></div>

<h1 id="10_makemultiplesofdigit2">10_makeMultiplesOfDigit2</h1>

<ul>
  <li>두 개의 수를 입력받아 두 수를 포함해 두 수 사이의 수 중 2의 배수의 개수를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makeMultiplesOfDigit2(num1, num2) {
  let small =num1;
  let big = num2;
  let count = 0;

  if(num1 &gt; num2){
    small = num2;
    big = num1;
  }

  if(small === 0){
    small = 1
  }

  for(let i = small; i &lt;= big; i++ ){
    if(i % 2 === 0){
      count += 1
    }
  }
  return count;
}
</code></pre></div></div>

<h1 id="11_countcharacter">11_countCharacter</h1>

<ul>
  <li>문자열과 문자를 입력받아 문자열에서 문자(letter)가 등장하는 횟수를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function countCharacter(str, letter) {
  let count = 0;

  for(let i =0; i &lt;= str.length; i++){
    if(str[i]===letter){
      count= count+1;
    }
  }
  return count;
}

</code></pre></div></div>

<h1 id="12_getmaxnumberfromstring">12_getMaxNumberFromString</h1>

<ul>
  <li>숫자 문자열을 입력받아 문자열을 구성하는 각 숫자 중 가장 큰 수를 나타내는 숫자를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getMaxNumberFromString(str) {
  let numMax = 0;

  for(let i=0; i &lt;= str.length; i++){
    if(parseInt(str[i]) &gt; numMax){
      numMax = parseInt(str[i])
    }
  }
  return String(numMax);
}

</code></pre></div></div>

<h1 id="13_replaceall">13_replaceAll</h1>

<ul>
  <li>문자열과 두 개의 문자(<code class="language-plaintext highlighter-rouge">from</code>, <code class="language-plaintext highlighter-rouge">to</code>)를 입력받아, 문자열에 등장하는 특정 문자(<code class="language-plaintext highlighter-rouge">from</code>)가 다른 문자(<code class="language-plaintext highlighter-rouge">to</code>)로 바뀐 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function replaceAll(str, from, to) {
  let result = '';

  for(let i =0; str.length &gt; i;i++){
    if(str[i]===from){
      result = result+to;
    } else {
      result = result+ str[i];
    }
  }
  return result;
}
</code></pre></div></div>

<h1 id="14_characterandnumber">14_characterAndNumber</h1>

<ul>
  <li>문자열을 입력받아 각 문자(letter) 뒤에 해당 문자의 인덱스가 추가된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function characterAndNumber(word) {
  let result = '';
  if(word.length===0){
    return '';
  }

  for(let i =0; word.length &gt; i; i++){
    result = result+word[i]+i;
  }
  return result;
}
</code></pre></div></div>

<h1 id="15_computepower">15_computePower</h1>

<ul>
  <li>밑(base)과 지수(exponent)를 입력받아 밑의 거듭제곱을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function computePower(base, exponent) {
  let result = 1;
  for(let i =0; i &lt; exponent; i++ ){
    result= result*base;
  }
  return result;
}

</code></pre></div></div>

<h1 id="16_getsumoffactors">16_getSumOfFactors</h1>

<ul>
  <li>수를 입력받아 약수(factor)의 합을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getSumOfFactors(num) {
  let result =0;

  for(let i =0; i &lt;= num; i++){
    if(num%i===0){
      result = result + i
    }
  }
  return result;
}
</code></pre></div></div>

<h1 id="17_isprime">17_isPrime</h1>

<ul>
  <li>1 이상의 자연수를 입력받아 소수(prime number)인지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isPrime(num) {
  let sqrt = Math.sqrt(num)

  if(num===1){
    return false;
  }
  if(num===2){
    return true;
  }
  if(num%2===0){
    return false;
  }

  for(let i =3; i &lt; sqrt; i++){
    if(num % i === 0){
      return false;
    }
  }
  return true;
}
</code></pre></div></div>

<h1 id="18_listprimes">18_listPrimes</h1>

<ul>
  <li>2 이상의 자연수를 입력받아 2부터 해당 수까지의 소수(prime number)들을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function listPrimes(num) {
  let result = '2';
  for(let i =3; i &lt;= num;i+=2){
    let isPrime = true; // 소수 인 경우
    let sqrt = Math.sqrt(i);
    for(let j = 3; j &lt;= sqrt; j+=2 ){
      if(i%j===0){
        isPrime = false;
        break;
      }
    }
    if(isPrime){
      result= `${result}-${i}`
    }
  }
  return result;
}
</code></pre></div></div>

<h1 id="19_makepermutations">19_makePermutations</h1>

<ul>
  <li>문자열을 입력받아 해당 문자열에 등장하는 각 문자(letter)를 가지고 만들 수 있는 길이 2의 문자열들을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makePermutations(str) {
  let result ='';
  for(let i = 0; i &lt; str.length; i++){
    for(let j = 0; j&lt; str.length; j++){
      result = result+`${str[i]}${str[j]},`
    }
  }
  return result.slice(0,result.length-1);
}
</code></pre></div></div>

<h1 id="20_hasrepeatedcharacter">20_hasRepeatedCharacter</h1>

<ul>
  <li>문자열을 입력받아 해당 문자열에 중복된 문자(letter)가 존재하는지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function hasRepeatedCharacter(str) {
  if(str.length === 0 ){
    return false;
  }
  for(let i = 0; i &lt; str.length-1; i++){
    for(let j = i+1; j &lt; str.length; j++){
      if(str[i]===str[j]){
        return true;
      }
    }
  }
  return false;
}
</code></pre></div></div>

<h1 id="21_makemarginalstring">21_makeMarginalString</h1>

<ul>
  <li>문자열을 입력받아 해당 문자열을 처음부터 한 글자(letter)씩 다시 작성하려고 합니다. 이 때, 한 글자를 추가할 때마다 부분적으로 완성된 문자열을 전부 이어붙인 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makeMarginalString(str) {
   let result ='';
  for(let i = 0; i &lt; str.length; i++){
    for(let j = 0; j&lt;= i; j++){
      result = result+str[j];
    }
  }
  return result;
}
</code></pre></div></div>]]></content><author><name>Gardenia</name></author><category term="Coplit" /><category term="CodeStates" /><category term="Coplit" /><category term="JS" /><summary type="html"><![CDATA[코플릿 복습하기 - 반복문 21문제]]></summary></entry><entry><title type="html">[CodeStates]Coplit-5-배열</title><link href="http://localhost:4000/coplit/5-%EB%B0%B0%EC%97%B4/" rel="alternate" type="text/html" title="[CodeStates]Coplit-5-배열" /><published>2022-06-28T00:00:00+09:00</published><updated>2022-06-28T00:00:00+09:00</updated><id>http://localhost:4000/coplit/5-%EB%B0%B0%EC%97%B4</id><content type="html" xml:base="http://localhost:4000/coplit/5-%EB%B0%B0%EC%97%B4/"><![CDATA[<h1 id="01_gettype">01_getType</h1>

<ul>
  <li>임의의 값을 입력받아 타입을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getType(anything) {
  if(Array.isArray(anything)){
    return 'array';
  }else if(anything === null){
    return 'null';
  }else {
    return typeof anything;
  }
}

</code></pre></div></div>

<h1 id="02_getfirstelement">02_getFirstElement</h1>

<ul>
  <li>배열을 입력받아 배열의 첫번째 요소를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getFirstElement(arr) {
  if(arr.length ===0){
    return undefined;
  }

  return arr[0];
}

</code></pre></div></div>

<h1 id="03_getlastelement">03_getLastElement</h1>

<ul>
  <li>배열를 입력받아 배열의 마지막 요소를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getLastElement(arr) {
  if(arr.length === 0){
    return undefined;
  }

  return arr[arr.length-1]
}
</code></pre></div></div>

<h1 id="04_getnthelement">04_getNthElement</h1>

<ul>
  <li>배열과 수를 입력받아 수가 인덱스로 가리키는 배열의 요소를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getNthElement(arr, index) {
  if(arr.length === 0){
    return undefined;
  }
  if(arr.length &lt;= index){
    return 'out of index range'
  }

  return arr[index]
}
</code></pre></div></div>

<h1 id="05_computesumofallelements">05_computeSumOfAllElements</h1>

<ul>
  <li>배열을 입력받아 배열의 모든 요소의 합을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function computeSumOfAllElements(arr) {
  let result =0;
  for(let i = 0; i &lt; arr.length; i++){
    result = result + arr[i];
  }
  return result;
}
</code></pre></div></div>

<h1 id="06_getallwords">06_getAllWords</h1>

<ul>
  <li>문자열을 입력받아 문자열을 구성하는 각 단어를 요소로 갖는 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getAllWords(str) {
  if(str.length === 0){
    return [];
  }
  return str.split(' ');
}
</code></pre></div></div>

<h1 id="07_getallletters">07_getAllLetters</h1>

<ul>
  <li>문자열을 입력받아 문자열을 구성하는 각 문자를 요소로 갖는 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getAllLetters(str) {
  let result =[];
  if(str.length === 0){
    return [];
  }
  for(let i =0; i &lt; str.length; i++){
    result.push(str[i])
  }
  return result;
}
</code></pre></div></div>

<h1 id="08_getlargestelement">08_getLargestElement</h1>

<ul>
  <li>배열을 입력받아 가장 큰 요소를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getLargestElement(arr) {
  let max = arr[0];
  for(let i of arr){
    if(max &lt; i){
      max = i;
    }
  }
  return max;
}
</code></pre></div></div>

<h1 id="09_getlongestword">09_getLongestWord</h1>

<ul>
  <li>문자열을 입력받아 문자열에서 가장 긴 단어를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getLongestWord(str) {
  let words = str.split(' ');

  let long = words[0];

  for(let i of words){
    if(i.length &gt; long.length){
      long = i;
    }
  }
  return long;
}
</code></pre></div></div>

<h1 id="10_getevennumbers">10_getEvenNumbers</h1>

<ul>
  <li>수를 요소로 갖는 배열을 입력받아 짝수만을 요소로 갖는 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getEvenNumbers(arr) {
  let result =[];

  for(let i of arr){
    if(i % 2===0){
      result.push(i)
    }
  }
  return result
}
</code></pre></div></div>

<h1 id="11_addtofront">11_addToFront</h1>

<ul>
  <li>배열과 요소를 입력받아 주어진 요소를 배열의 맨 앞에 추가하고 해당 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addToFront(arr, el) {
 arr.unshift(el);

 return arr;
}
</code></pre></div></div>

<h1 id="12_addtoback">12_addToBack</h1>

<ul>
  <li>배열과 요소를 입력받아 주어진 요소를 배열의 맨 뒤에 추가하고 해당 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addToBack(arr, el) {
  arr.push(el);
  return arr;
}
</code></pre></div></div>

<h1 id="13_mergearrays">13_mergeArrays</h1>

<ul>
  <li>두 개의 배열을 입력받아 순서대로 합쳐진 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function mergeArrays(arr1, arr2) {
  return arr1.concat(arr2)
}
</code></pre></div></div>

<h1 id="14_getelementsafter">14_getElementsAfter</h1>

<ul>
  <li>배열과 인덱스를 입력받아 주어진 인덱스 이후의 요소들을 갖는 새로운 배열을 리</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getElementsAfter(arr, n) {
  return arr.slice(n+1)
}

</code></pre></div></div>

<h1 id="15_getelementsupto">15_getElementsUpTo</h1>

<ul>
  <li>배열과 인덱스를 입력받아 주어진 인덱스 이전의 요소들을 갖는 새로운 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getElementsUpTo(arr, n) {
  if(arr.length &lt; n){
    return [];
  }
  return arr.slice(0,n);
}
</code></pre></div></div>

<h1 id="16_getallelementsbutfirst">16_getAllElementsButFirst</h1>

<ul>
  <li>배열을 입력받아 배열의 첫번째 요소를 제외한 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getAllElementsButFirst(arr) {
  return arr.slice(1)
}
</code></pre></div></div>

<h1 id="17_getallelementsbutlast">17_getAllElementsButLast</h1>

<ul>
  <li>배열을 입력받아 마지막 요소를 제외한 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getAllElementsButLast(arr) {
  return arr.slice(0,arr.length-1)
}

</code></pre></div></div>

<h1 id="18_removefromfront">18_removeFromFront</h1>

<ul>
  <li>배열을 입력받아 배열의 첫번째 요소가 삭제된 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeFromFront(arr) {
  arr.shift();
  return arr;
}
</code></pre></div></div>

<h1 id="19_removefromback">19_removeFromBack</h1>

<ul>
  <li>배열을 입력받아 배열의 마지막 요소를 삭제한 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeFromBack(arr) {
  arr.pop();
  return arr;
}
</code></pre></div></div>

<h1 id="20_removefrombackofnew">20_removeFromBackOfNew</h1>

<ul>
  <li>배열을 입력받아 배열의 마지막 요소가 제외된 새로운 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function removeFromBackOfNew(arr) {
  return arr.slice(0,arr.length-1)
}
</code></pre></div></div>

<h1 id="21_addtobackofnew">21_addToBackOfNew</h1>

<ul>
  <li>배열과 요소를 입력받아 새로운 요소가 추가된 새로운 배열을 리</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addToBackOfNew(arr, el) {
  let newArr = arr.slice();
  newArr.push(el);
  return newArr;
}

</code></pre></div></div>

<h1 id="22_addtofrontofnew">22_addToFrontOfNew</h1>

<ul>
  <li>배열과 요소를 입력받아 맨앞에 새로운 요소가 추가된 새로운 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addToFrontOfNew(arr, el) {
  let newArr = arr.slice();
  newArr.unshift(el);
  return newArr;
}

</code></pre></div></div>

<h1 id="23_getallelementsbutnth">23_getAllElementsButNth</h1>

<ul>
  <li>배열과 인덱스를 입력받아 해당 인덱스의 요소를 제외한 배열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getAllElementsButNth(arr, n) {
  let result = [];

  for(let i =0 ; i &lt; arr.length; i++){
    if(i !== n){
      result.push(arr[i]);
    }
  }
  return result;
}

</code></pre></div></div>

<h1 id="24_createphonenumber">24_createPhoneNumber</h1>

<ul>
  <li>0-9 사이의 정수를 요소로 갖는 배열을 입력받아 전화번호 형식의 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function createPhoneNumber(arr) {
  let start = '(010)';
  let len = arr.length;
  let body = arr.slice(len - 8, len - 4).join('');
  let end = arr.slice(len - 4, len).join('');

  if (len === 11) {
    start = `(${arr.slice(0, 3).join('')})`;
  }
    return `${start}${body}-${end}`
}
</code></pre></div></div>

<h1 id="25_fibonacci">25_fibonacci</h1>

<ul>
  <li>수(<code class="language-plaintext highlighter-rouge">num</code>)를 입력받아 <code class="language-plaintext highlighter-rouge">num</code>번째까지 총 <code class="language-plaintext highlighter-rouge">num + 1</code>개의 피보나치 수열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function fibonacci(num) {
  let arr =[];

  for(let i =0; i &lt;= num; i++){
    if(i === 0){
      arr.push(i)
    }else if(i === 1){
      arr.push(i)
    }else {
      arr.push(arr[i-2]+arr[i-1]);
    }
  }
  return arr;
}
</code></pre></div></div>]]></content><author><name>Gardenia</name></author><category term="Coplit" /><category term="CodeStates" /><category term="Coplit" /><category term="JS" /><summary type="html"><![CDATA[코플릿 복습하기 - 배열 25문제]]></summary></entry><entry><title type="html">[CodeStates]Coplit-1-변수와 자료형</title><link href="http://localhost:4000/coplit/1-%EB%B3%80%EC%88%98%EC%99%80-%EC%9E%90%EB%A3%8C%ED%98%95/" rel="alternate" type="text/html" title="[CodeStates]Coplit-1-변수와 자료형" /><published>2022-06-24T00:00:00+09:00</published><updated>2022-06-24T00:00:00+09:00</updated><id>http://localhost:4000/coplit/1-%EB%B3%80%EC%88%98%EC%99%80-%EC%9E%90%EB%A3%8C%ED%98%95</id><content type="html" xml:base="http://localhost:4000/coplit/1-%EB%B3%80%EC%88%98%EC%99%80-%EC%9E%90%EB%A3%8C%ED%98%95/"><![CDATA[<h1 id="01_declaration">01_declaration</h1>

<ul>
  <li>let 키워드로 course 변수 선언하기</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let course;
</code></pre></div></div>

<h1 id="02_assignment">02_assignment</h1>

<ul>
  <li>변수(course)에 값(code states) 할당하기</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let course = 'code states';
</code></pre></div></div>

<h1 id="03_expression">03_expression</h1>

<ul>
  <li>변수 num1에 숫자 5를 할당, 변수 num2에 숫자 7을 할당, 변수 result에 num1과 num2의 곱을 할당하기</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let num1, num2, result;

num1 = 5;
num2 = 7;
result = num1*num2;
</code></pre></div></div>

<h1 id="04_getruncatdistance">04_getRunCatDistance</h1>

<ul>
  <li>속력(speed), 시간(time)이 숫자로 주어졌을 때, 이동한 거리를 변수 distance에 할당하여 리턴하는 함수 작성하기</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getRunCatDistance(speed, time) {
  let distance = speed * time;

  return distance;
}
</code></pre></div></div>

<h1 id="05_declarefunction">05_declareFunction</h1>

<ul>
  <li>첫 번째 인자에 2를 곱하는 함수 multiplyBy2와 비슷하게 첫 번째 인자를 2로 나누는 함수 divideBy2 선언하기</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function multiplyBy2(input) {
  input = input * 2;
  return input;
}

function divideBy2(input) {
  input = input / 2;
  return input;
}
</code></pre></div></div>

<h1 id="06_callfunction">06_callFunction</h1>

<ul>
  <li>문자열을 인자로 받아서 느낌표를 붙여서 리턴 해주는 함수 returnWordWithJoy가 있을 때,
함수 returnWordWithJoy의 첫 번째 인자로 문자열 “I love coding”을 넣어서 호출하고, 그 결과값을 변수 word에 할당하라</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let word = returnWordWithJoy('I love coding');

// 아래 코드는 변경 ❌
function returnWordWithJoy(word) {
  if (typeof word !== 'string') {
    return 'wrong type';
  } else {
    return word + '!';
  }
}
</code></pre></div></div>

<h1 id="07_type">07_type</h1>

<ul>
  <li>thing에 문자열(string) ‘두루마리 휴지’를 할당하고, num에 숫자(number) 3을 할당</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let thing = '두루마리 휴지', num = 3;

// 아래 코드는 변경 ❌
function goGet(thing, num) {
  return '혜선아, 가서 ' + thing + ' ' + num + '개 가져다 줄래?';
}
let result = goGet(thing, num);
</code></pre></div></div>

<h1 id="08_plusrighttype">08_plusRightType</h1>

<ul>
  <li>변수 score에 숫자 100이 할당되도록 하기 코드를 수정</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//before
let score = 90 + '10';

// after
let score = 100;
</code></pre></div></div>

<h1 id="09_converttonumber">09_convertToNumber</h1>

<ul>
  <li>Number() 함수를 이용해서 숫자로 변환하라</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function convertToNumber(anything) {
  return Number(anything)
}
</code></pre></div></div>

<h1 id="10_converttostring">10_convertToString</h1>

<ul>
  <li>String() 함수를 이용해서 문자로 변환하라</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function convertToString(anything) {
  return String(anything)
}
</code></pre></div></div>]]></content><author><name>Gardenia</name></author><category term="Coplit" /><category term="CodeStates" /><category term="Coplit" /><category term="JS" /><summary type="html"><![CDATA[코플릿 복습하기 - 변수와 자료형 10문제]]></summary></entry><entry><title type="html">[CodeStates]Coplit-2-조건문</title><link href="http://localhost:4000/coplit/2-%EC%A1%B0%EA%B1%B4%EB%AC%B8/" rel="alternate" type="text/html" title="[CodeStates]Coplit-2-조건문" /><published>2022-06-24T00:00:00+09:00</published><updated>2022-06-24T00:00:00+09:00</updated><id>http://localhost:4000/coplit/2-%EC%A1%B0%EA%B1%B4%EB%AC%B8</id><content type="html" xml:base="http://localhost:4000/coplit/2-%EC%A1%B0%EA%B1%B4%EB%AC%B8/"><![CDATA[<h1 id="01_isoldenoughtodrink">01_isOldEnoughToDrink</h1>

<ul>
  <li>나이를 입력받아 술을 마실 수 있는지(18세 이상) 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isOldEnoughToDrink(age) {
  if(age&gt;=18){
    return true;
  } return false;
}

</code></pre></div></div>

<h1 id="02_isgreaterthan30">02_isGreaterThan30</h1>

<ul>
  <li>온도를 입력받아 해당 온도가 30이 넘는지 확인 후 알맞은 값을 리턴
    <ul>
      <li>온도가 30 미만일 때 : ‘여름이 매우 덥네요’</li>
      <li>온도가 30 이상일 때 : ‘에어컨을 켜야겠다!’</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isGreaterThan30(temp) {
  if(temp &gt;=30){
    return "에어컨을 켜야겠다!"
  } return "여름이 매우 덥네요"
}
</code></pre></div></div>

<h1 id="03_equalsten">03_equalsTen</h1>

<ul>
  <li>수를 입력받아 10과 같은지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function equalsTen(num) {
  if(num===10){
    return true;
  } return false;
}
</code></pre></div></div>

<h1 id="04_isgreaterthan">04_isGreaterThan</h1>

<ul>
  <li>두 개의 수를 입력받아 두번째 수가 첫번째 수보다 큰지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isGreaterThan(num1, num2) {
  if(num1&lt;num2){
    return true;
  } return false;
}
</code></pre></div></div>

<h1 id="05_iseven">05_isEven</h1>

<ul>
  <li>수를 입력받아 짝수인지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isEven(num) {
  if(num%2===0){
    return true;
  } return false;
}

</code></pre></div></div>

<h1 id="06_isevenandgreaterthanten">06_isEvenAndGreaterThanTen</h1>

<ul>
  <li>수를 입력받아 입력된 수가 10보다 크고 짝수인지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isEvenAndGreaterThanTen(num) {
  if(num &gt; 10 &amp;&amp; num%2===0){
    return true;
  } return false;
}
</code></pre></div></div>

<h1 id="07_fizzbuzz">07_fizzBuzz</h1>

<ul>
  <li>수를 입력받아 3 그리고 5로 각각 나눈 뒤 나머지 값에 따라 알맞은 메시지를 리턴
    <ul>
      <li>3으로 나누어 떨어지는 경우, ‘Fizz’를 리턴</li>
      <li>5으로 나누어 떨어지는 경우, ‘Buzz’를 리턴</li>
      <li>3과 5로 모두 나누어 떨어지는 경우, ‘FizzBuzz’를 리턴</li>
      <li>3이나 5로 나누어 떨어지지 않는 경우, ‘No FizzBuzz’를 리턴</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function fizzBuzz(num) {
  if(num % 3 === 0 &amp;&amp; num % 5 === 0){
    return 'FizzBuzz';
  }else if(num % 3 === 0){
    return 'Fizz';
  }else if(num % 5 === 0){
    return 'Buzz';
  }else {
    return 'No FizzBuzz';
  }
}
</code></pre></div></div>

<h1 id="08_minicalculator">08_miniCalculator</h1>

<ul>
  <li>두 개의 수와 기호를 입력받아 알맞게 계산한 값을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function miniCalculator(num1, num2, operator) {
  if(operator==='+'){
    return num1 + num2;
  }else  if(operator==='-'){
    return num1 - num2;
  }else if(operator==='*'){
    return num1 * num2;
  }else if(operator==='/'){
    return num1 / num2;
  }
}
</code></pre></div></div>

<h1 id="09_daysinmonth">09_daysInMonth</h1>

<ul>
  <li>특정 달(month)을 입력받아 각 달에 몇 일이 있는지 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function daysInMonth(month) {
  if(month===2){
    return 28;
  }else if(month===4 ||month===6 ||month===9 ||month===11){
    return 30;
  }return 31;
}
</code></pre></div></div>

<h1 id="10_followingday">10_followingDay</h1>

<ul>
  <li>요일을 입력받아 해당 요일의 다음 요일을 리턴
    <ul>
      <li>올바른 요일을 입력받은 경우, 다음 요일을 리턴</li>
      <li>올바른 요일이 아닌 경우에는 <code class="language-plaintext highlighter-rouge">올바른 요일이 아닙니다 </code>라는 문구를 리턴</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function followingDay(day) {
  if(day==='월요일'){
    return '화요일';
  }else if(day==='화요일'){
    return '수요일';
  }else if(day==='수요일'){
    return '목요일';
  }else if(day==='목요일'){
    return '금요일';
  }else if(day==='금요일'){
    return '토요일';
  }else if(day==='토요일'){
    return '일요일';
  }else if(day==='일요일'){
    return '월요일';
  }else {
    return '올바른 요일이 아닙니다'
  }
}
</code></pre></div></div>

<h1 id="11_iseitherevenandlessthan9">11_isEitherEvenAndLessThan9</h1>

<ul>
  <li>두 개 수를 입력받아 아래의 2가지 조건을 모두 만족하는지 검사
    <ul>
      <li>EitherEven: 적어도 하나의 수는 짝수임</li>
      <li>LessThan9: 두 수 모두 9보다 작음</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isEitherEvenAndLessThan9(num1, num2) {
  if(num1 &lt; 9 &amp;&amp; num2 &lt; 9){
    if(num1 % 2===0 || num2 % 2 ===0 ){
     return true;
   } return false;
  }
  return false;
}
</code></pre></div></div>

<h1 id="12_convertscoretograde">12_convertScoreToGrade</h1>

<ul>
  <li>점수를 입력받아 점수에 해당하는 등급을 리턴
    <ul>
      <li>주어진 점수가 100을 초과하거나 0 미만이라면 문자열 <code class="language-plaintext highlighter-rouge">INVALID SCORE</code>를 리턴</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function convertScoreToGrade(score) {
  if(score &lt; 0 || score &gt; 100){
    return 'INVALID SCORE'
  }else if(score&gt;=90){
    return 'A'
  }else if(score&gt;=80){
    return 'B'
  }else if(score&gt;=70){
    return 'C'
  }else if(score&gt;=60){
    return 'D'
  }else {
    return 'F'
  }
}
</code></pre></div></div>

<h1 id="13_convertscoretogradewithplusandminus">13_convertScoreToGradeWithPlusAndMinus</h1>

<ul>
  <li>점수를 입력받아 점수에 해당하는 등급을 리턴
    <ul>
      <li>주어진 점수가 100을 초과하거나 0 미만인 경우, 문자열 <code class="language-plaintext highlighter-rouge">INVALID SCORE</code>를 리턴</li>
      <li>각 등급의 최고 점수보다 7점 이하인 경우, 등급과 함께 ‘-‘를 리턴 (단, 93점의 경우에는 A를 리턴</li>
      <li>각 등급의 최저 점수보다 8점 이상인 경우, 등급과 함께 ‘+’를 리턴</li>
      <li>F+ 와 F- 는 존재❌</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function convertScoreToGradeWithPlusAndMinus(score) {
  if(score &lt; 0 || score &gt; 100){
    return 'INVALID SCORE'
  }else if(score&gt;98){
    return 'A+'
  }else if(score&gt;=93){
    return 'A'
  }else if(score&gt;=90){
    return 'A-'
  }else if(score&gt;=88){
    return 'B+'
  }else if(score&gt;=84){
    return 'B'
  }else if(score&gt;=80){
    return 'B-'
  }else if(score&gt;=78){
    return 'C+'
  }else if(score&gt;=74){
    return 'C'
  }else if(score&gt;=70){
    return 'C-'
  }else if(score&gt;=68){
    return 'D+'
  }else if(score&gt;=64){
    return 'D'
  }else if(score&gt;=60){
    return 'D-'
  }else {
    return 'F'
  }
}

</code></pre></div></div>

<h1 id="14_ispythagorean">14_isPythagorean</h1>

<ul>
  <li>삼각형의 세 변을 입력받아 직각삼각형(pythagorean)인지 여부를 리턴
    <ul>
      <li>자바스크립트에서 x의 제곱(x squared)을 구하는 방법 3가지를 사용</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isPythagorean(side1, side2, side3) {

let pow1 = Math.pow(side1,2);
let pow2 = side2 **2;
let pow3 = side3 * side3

if(pow1 === pow2 + pow3 || pow2 === pow1 + pow3 || pow3 === pow1 + pow2){
   return true;
 } return false;
}
</code></pre></div></div>

<h1 id="15_or">15_or</h1>

<ul>
  <li>두 개의 boolean 값을 입력받아 or 연산을 적용한 것과 같은 결과를 리턴
    <ul>
      <li><code class="language-plaintext highlighter-rouge">||</code> 연산자 사용은 금지</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function or(expression1, expression2) {
  if(expression1===true &amp;&amp; expression2===true){
    return true;
  }else if(expression1===true &amp;&amp; expression2===false){
    return true;
  }if(expression1===false &amp;&amp; expression2===true){
    return true;
  } return false;
}

</code></pre></div></div>

<h1 id="16_addonesecond">16_addOneSecond</h1>

<ul>
  <li>시, 분, 초를 입력받아 1초를 더한 결과값을 특정 형태의 메시지로 리턴
    <ul>
      <li><code class="language-plaintext highlighter-rouge">1초 뒤에 {hour}시 {minute}분 {second}초 입니다</code> 형식으로 리턴</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function addOneSecond(hour, minute, second) {
  if(second === 59){
    second = 0;
    minute += 1
  }else {
    second +=1;
  }

  if(minute === 60){
    minute = 0;
    hour += 1;
  }

  if(hour === 24){
    hour = 0;
  }

  return `1초 뒤에 ${hour}시 ${minute}분 ${second}초 입니다`
}

</code></pre></div></div>

<h1 id="17_isfalsy">17_isFalsy</h1>

<ul>
  <li>임의의 값을 입력받아 falsy 값인지 여부를 리턴
    <ul>
      <li>참조 : <code class="language-plaintext highlighter-rouge">js falsy value</code> 또는 <code class="language-plaintext highlighter-rouge">자바스크립트 거짓 값</code></li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isFalsy(anything) {
  return !Boolean(anything)
}
</code></pre></div></div>]]></content><author><name>Gardenia</name></author><category term="Coplit" /><category term="CodeStates" /><category term="Coplit" /><category term="JS" /><summary type="html"><![CDATA[코플릿 복습하기 - 조건문 17문제]]></summary></entry><entry><title type="html">[CodeStates]Coplit-3-문자열</title><link href="http://localhost:4000/coplit/3-%EB%AC%B8%EC%9E%90%EC%97%B4/" rel="alternate" type="text/html" title="[CodeStates]Coplit-3-문자열" /><published>2022-06-24T00:00:00+09:00</published><updated>2022-06-24T00:00:00+09:00</updated><id>http://localhost:4000/coplit/3-%EB%AC%B8%EC%9E%90%EC%97%B4</id><content type="html" xml:base="http://localhost:4000/coplit/3-%EB%AC%B8%EC%9E%90%EC%97%B4/"><![CDATA[<h1 id="01_getfullname">01_getFullName</h1>

<ul>
  <li>이름과 성을 입력받아 띄어쓰기 하나를 사이에 둔 단일 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getFullName(firstName, lastName) {
  return `${firstName} ${lastName}`
}
</code></pre></div></div>

<h1 id="02_checkage">02_checkAge</h1>

<ul>
  <li>이름과 나이를 입력받아 나이별로 다른 메시지를 리턴
    <ul>
      <li>이름이 <code class="language-plaintext highlighter-rouge">Adrian</code>이고, 나이가 <code class="language-plaintext highlighter-rouge">21</code>살 이상이면, <code class="language-plaintext highlighter-rouge">Welcome, Adrian!</code> 을 리턴</li>
      <li>이름이 <code class="language-plaintext highlighter-rouge">John</code>이고, 만일 <code class="language-plaintext highlighter-rouge">21</code>살보다 적으면, <code class="language-plaintext highlighter-rouge">Go home, John!</code>을 리턴</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function checkAge(name, age) {
  if(age &gt;= 21 ){
    return `Welcome, ${name}!`
  } return `Go home, ${name}!`
}
</code></pre></div></div>

<h1 id="03_getlengthofword">03_getLengthOfWord</h1>

<ul>
  <li>단어를 입력받아 단어의 길이를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function getLengthOfWord(word) {
  if(word.length &gt; 0){
    return word.length;
  } return 0;
}
</code></pre></div></div>

<h1 id="04_computeaveragelengthofwords">04_computeAverageLengthOfWords</h1>

<ul>
  <li>두 단어를 입력받아 두 단어의 평균 길이를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function computeAverageLengthOfWords(word1, word2) {
  if(word1.length &gt; 0 &amp;&amp; word2.length &gt; 0){
    return (word1.length + word2.length) / 2
  } return 0;
}

</code></pre></div></div>

<h1 id="05_computeaveragelengthofwords2">05_computeAverageLengthOfWords2</h1>

<ul>
  <li>두 단어를 입력받아 두 단어의 평균 길이를 내림하여 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function computeAverageLengthOfWords2(word1, word2) {
  if(word1.length &gt; 0 &amp;&amp; word2.length &gt; 0){
    let floor =  (word1.length + word2.length) / 2
    return Math.floor(floor);
  } return 0;
}
</code></pre></div></div>

<h1 id="06_findshortestofthreewords">06_findShortestOfThreeWords</h1>

<ul>
  <li>차례대로 문자열 3개를 입력받아, 가장 짧은 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function findShortestOfThreeWords(word1, word2, word3) {
  let result = word1;

  if(word1.length &gt; word2.length){
    result = word2;
    if(word2.length &gt; word3.length){
      result = word3;
    }
  } else if (word1.length &gt; word3.length){
    result = word3;
  }
return result;
}
</code></pre></div></div>

<h1 id="07_isoddlength">07_isOddLength</h1>

<ul>
  <li>문자열을 입력받아 그 길이가 홀수인지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function isOddLength(word) {
  if(word.length % 2 !== 0){
    return true;
  } return false;
}
</code></pre></div></div>

<h1 id="08_arevalidcredentials">08_areValidCredentials</h1>

<ul>
  <li>이름과 비밀번호를 입력받아 이름이 3글자보다 크고 비밀번호가 8글자 이상이면 true를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function areValidCredentials(name, password) {
  if(name.length &gt; 3 &amp;&amp; password.length &gt;= 8){
    return true;
  } return false;
}
</code></pre></div></div>

<h1 id="09_findminlengthofthreewords">09_findMinLengthOfThreeWords</h1>

<ul>
  <li>세 개의 단어를 입력받아 그 중 가장 짧은 단어의 길이를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function findMinLengthOfThreeWords(word1, word2, word3) {
  let short = word1.length;
  let wordL1 = word1.length;
  let wordL2 = word2.length;
  let wordL3 = word3.length;

  if(wordL1 &gt; wordL2){
    short = wordL2;
    if(wordL2 &gt; wordL3){
      short = wordL3;
    }
  }else if (wordL1 &gt; wordL3){
    short = wordL3;
  }
  return short;
}

</code></pre></div></div>

<h1 id="10_takeletters">10_takeLetters</h1>

<ul>
  <li>수(<code class="language-plaintext highlighter-rouge">num</code>)와 문자열을 입력받아 차례대로 <code class="language-plaintext highlighter-rouge">num</code>개의 문자로 구성된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function takeLetters(num, str) {
  if(num &lt;= 0 || str === ''){
    return '';
  }

  return str.slice(0,num);
}
</code></pre></div></div>

<h1 id="11_dropletters">11_dropLetters</h1>

<ul>
  <li>수(<code class="language-plaintext highlighter-rouge">num</code>)와 문자열을 입력받아 차례대로 <code class="language-plaintext highlighter-rouge">num</code>개의 문자가 제거된 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function dropLetters(num, str) {
   if(num &gt;= str.length){
    return '';
  }

  return str.slice(num);
}
</code></pre></div></div>

<h1 id="12_compareonlyalphabet">12_compareOnlyAlphabet</h1>

<ul>
  <li>두 개의 문자열을 입력받아 대소문자를 구분하지 않고(case insensitive) 서로 같은지 여부를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function compareOnlyAlphabet(str1, str2) {
 let upper1 = str1.toUpperCase()
 let upper2 = str2.toUpperCase()

 if(upper1 === upper2){
   return true;
 } return false;
}
</code></pre></div></div>

<h1 id="13_comparenumbers">13_compareNumbers</h1>

<ul>
  <li>두 개의 수를 입력받아 조건별로 다른 메시지를 리</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function compareNumbers(num1, num2) {
  if(num1 &gt; num2){
    return `${num1}은(는) ${num2}보다 큽니다`
  }else if(num1 &lt; num2){
    return `${num1}은(는) ${num2}보다 작습니다`
  }else {
    return `두 수는 같습니다`
  }
}

</code></pre></div></div>

<h1 id="14_comparenumberstrings">14_compareNumberStrings</h1>

<ul>
  <li>두 개의 숫자 문자열을 입력받아 더 큰 수를 나타내는 문자열을 구하고, 해당 문자열이 나타내는 수에 5를 더한 수를 나타내는 숫자 문자열을 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function compareNumberStrings(numStr1, numStr2) {
  let num1 = Number(numStr1);
  let num2 = Number(numStr2);

  if(num1 &gt; num2){
    return String(num1+5);
  } return String(num2+5);
}

</code></pre></div></div>

<h1 id="15_showtime">15_showTime</h1>

<ul>
  <li>시간, 분, 초를 입력받아 현재 시각을 나타내는 메세지를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function showTime(hour, min, sec) {
  return `현재 시각은 ${hour}시 ${min}분 ${sec}초 입니다.`
}
</code></pre></div></div>

<h1 id="16_computedifference">16_computeDifference</h1>

<ul>
  <li>두 수를 입력받아 두 수의 차이를 나타내는 메세지를 리턴
    <ul>
      <li>절대값은 Math.abs(a-b);</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function computeDifference(num1, num2) {
  let abs = Math.abs(num1-num2);

  return `${num1}, ${num2}의 차이는 ${abs}입니다.`
}
</code></pre></div></div>

<h1 id="17_makelastseenmsg">17_makeLastSeenMsg</h1>

<ul>
  <li>사용자의 이름과 미접속 시간(분)을 입력받아 조건별로 다른 메세지를 리턴</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function makeLastSeenMsg(name, period) {
  let day = 60 * 24;
  let hour = 60;

  if(period&gt;=day){
    return `${name}: ${Math.floor(period / day)}일 전에 접속함`;
  }else if(period&gt;=hour){
    return `${name}: ${Math.floor(period/hour)}시간 전에 접속함`;
  }else {
    return `${name}: ${period}분 전에 접속함`;
  }
}
</code></pre></div></div>]]></content><author><name>Gardenia</name></author><category term="Coplit" /><category term="CodeStates" /><category term="Coplit" /><category term="JS" /><summary type="html"><![CDATA[코플릿 복습하기 - 문자열 17문제]]></summary></entry></feed>